`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 27.12.2023 11:08:09
// Design Name: 
// Module Name: maxpool
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module maxpool(
    input wire [64*224*224-1:0] dout_relu, // Flattened 224x224x64 input data
    output reg [64*112*112-1:0] out_data  // Flattened 112x112x64 output data
);

reg [7:0] max_val;
integer i, j, k, m, n, base_index;

integer row = 112; // for the iteration of rows
integer col = 112; // for the iteration of columns
integer layers = 64; // for iteration through layers

always @(*) begin
    for (k = 0; k < layers; k = k + 1) begin
        for (i = 0; i < row; i = i + 1) begin
            for (j = 0; j < col; j = j + 1) begin
                base_index = (k*224*224) + (i*2*224) + (j*2);
                max_val = 8'h00;  // Initialize the max value

                for (m = 0; m < 2; m = m + 1) begin
                    for (n = 0; n < 2; n = n + 1) begin
                        if (dout_relu[base_index + m*224 + n] > max_val) begin
                            max_val = dout_relu[base_index + m*224 + n];
                        end
                    end
                end

                out_data[(k*112*112) + (i*112) + j] = max_val;
            end
        end
    end
end
endmodule
