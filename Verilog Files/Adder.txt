module vectorAdder(
  input [31:0] vector_a [0:1023][0:1023][0:1023],
  input [31:0] vector_b [0:1023][0:1023][0:1023],
  input [31:0] vector_c [0:1023][0:1023][0:1023],
  input [31:0] vector_d [0:1023][0:1023][0:1023],
  input [31:0] vector_e [0:1023][0:1023][0:1023],
  input [31:0] vector_f [0:1023][0:1023][0:1023],
  input [31:0] vector_g [0:1023][0:1023][0:1023],
  input [31:0] vector_h [0:1023][0:1023][0:1023],
  input [31:0] vector_i [0:1023][0:1023][0:1023],
  input [31:0] vector_j [0:1023][0:1023][0:1023],
  output [31:0] result_vector [0:1023][0:1023][0:1023]
);

  integer i, j, k;

  // Vector addition
  always @* begin
    for (i = 0; i < 1024; i = i + 1) begin
      for (j = 0; j < 1024; j = j + 1) begin
        for (k = 0; k < 1024; k = k + 1) begin
          result_vector[i][j][k] = vector_a[i][j][k] 
          + vector_b[i][j][k] 
          + vector_c[i][j][k] 
          + vector_d[i][j][k] 
          + vector_e[i][j][k] 
          + vector_f[i][j][k] 
          + vector_g[i][j][k] 
          + vector_h[i][j][k] 
          + vector_i[i][j][k] 
          + vector_j[i][j][k]
	  ;
        end
      end
    end
  end

endmodule
