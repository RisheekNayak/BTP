module vectorAdder(
  input [31:0][0:(1024*1024*1024)-1] vector_a ,
  input [31:0][0:(1024*1024*1024)-1] vector_b ,
  input [31:0][0:(1024*1024*1024)-1] vector_c ,
  input [31:0][0:(1024*1024*1024)-1] vector_d ,
  input [31:0][0:(1024*1024*1024)-1] vector_e ,
  input [31:0][0:(1024*1024*1024)-1] vector_f ,
  input [31:0][0:(1024*1024*1024)-1] vector_g ,
  input [31:0][0:(1024*1024*1024)-1] vector_h ,
  input [31:0][0:(1024*1024*1024)-1] vector_i ,
  input [31:0][0:(1024*1024*1024)-1] vector_j ,
  output reg [31:0][0:(1024*1024*1024)-1] result_vector 
);

  integer idx;

  // Vector addition
  always @* begin
    for (idx = 0; idx < (1024*1024*1024); idx = idx + 1) begin
      result_vector[idx] = vector_a[idx] + 
			   vector_b[idx] +
                           vector_c[idx] + 
			   vector_d[idx] + 
			   vector_e[idx] + 
			   vector_f[idx] + 
			   vector_g[idx] + 
			   vector_h[idx] + 
			   vector_i[idx] + 
			   vector_j[idx]
					;
    end
  end

endmodule
