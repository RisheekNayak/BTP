module softmax(
  input signed [15:0] x [0:4095], // Input array with 4096 elements
  output reg signed [15:0] y [0:4095], // Output array with 4096 elements
  output reg [11:0] index // Index of the maximum value in the input array
);

  // Internal variables
  reg signed [15:0] exp_x [0:4095];
  reg signed [31:0] sum_exp;
  reg [11:0] max_index;
  reg signed [15:0] max_value;

  always_comb begin
    // Compute the exponentials of the input values
    for (int i = 0; i < 4096; i++) begin
      exp_x[i] = $exp(x[i]);
    end

    // Find the maximum value and its index
    max_value = exp_x[0];
    max_index = 0;
    for (int i = 1; i < 4096; i++) begin
      if (exp_x[i] > max_value) begin
        max_value = exp_x[i];
        max_index = i;
      end
    end

    // Compute the sum of exponentials
    sum_exp = 0;
    for (int i = 0; i < 4096; i++) begin
      sum_exp = sum_exp + exp_x[i];
    end

    // Compute the softmax output
    for (int i = 0; i < 4096; i++) begin
      y[i] = exp_x[i] / sum_exp;
    end
  end

  // Output the index of the maximum value
  always_ff @(posedge clk or negedge rst_n) begin
    if (!rst_n) begin
      index <= 12'b0;
    end else begin
      index <= max_index;
    end
  end

endmodule
