module ShuffleChannel(
  input wire [31:0] in_data,
  output wire [31:0] out_data
);

  // Assuming 32 channels
  parameter CHANNEL_WIDTH = 32;
  parameter GROUP_SIZE = 4;

  // Function to perform the shuffle channel operation
  function [CHANNEL_WIDTH-1:0] shuffle_channel;
    input [CHANNEL_WIDTH-1:0] in_data;
    output [CHANNEL_WIDTH-1:0] out_data;

    reg [CHANNEL_WIDTH-1:0] shuffled_data;

    integer i, j;
    integer group_id, channel_id_in_group;

    initial begin
      for (i = 0; i < CHANNEL_WIDTH; i = i + GROUP_SIZE) begin
        group_id = i / GROUP_SIZE;
        for (j = 0; j < GROUP_SIZE; j = j + 1) begin
          channel_id_in_group = group_id + j * (CHANNEL_WIDTH / GROUP_SIZE);
          shuffled_data[i + j] = in_data[channel_id_in_group];
        end
      end
    end

    assign out_data = shuffled_data;
  endfunction

  // Instantiate the shuffle_channel function
  assign out_data = shuffle_channel(in_data);

endmodule
